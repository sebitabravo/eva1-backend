version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: maderas_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-maderas_db}
      - POSTGRES_USER=${DATABASE_USER:-maderas_user}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-changeme}
      # Optimización para bajo consumo de recursos
      - POSTGRES_SHARED_BUFFERS=128MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=256MB
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_MAX_CONNECTIONS=20
    ports:
      - "5432:5432"
    # Límites de recursos para PostgreSQL
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    # Rotación de logs para evitar consumo excesivo de disco
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-maderas_user} -d ${DATABASE_NAME:-maderas_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - maderas_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: maderas_web
    restart: unless-stopped
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "${HOST_PORT:-3002}:8000"
    env_file:
      - .env
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    # Límites de recursos para Django/Gunicorn
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    # Rotación de logs para evitar consumo excesivo de disco
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - maderas_network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  maderas_network:
    driver: bridge
